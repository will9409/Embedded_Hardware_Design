LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY Lab_06_2 IS
	GENERIC (N : INTEGER := 4);
	PORT(	clock,Reset : IN STD_LOGIC;
			clear,load,iIsNot10,output_select  : BUFFER STD_LOGIC;
			output : OUT STD_LOGIC_VECTOR(N-1 DOWNTO 0));
			
END Lab_06_2;

ARCHITECTURE ControlUnit OF Lab_06_2 IS
	COMPONENT Lab_06_1_1 IS
	GENERIC (N : INTEGER := 4);
PORT(	iLoad,Clear,Clock,Output_sel : IN STD_LOGIC;
			i_not_10 : OUT STD_LOGIC;
			Output : OUT STD_LOGIC_VECTOR(N-1 DOWNTO 0));
	END COMPONENT;

TYPE state IS (S0, S1, S2);
SIGNAL ControlState : state;
SIGNAL i : INTEGER := 0;

BEGIN
	DP1 : Lab_06_1_1 GENERIC MAP ( N => 4 )
			PORT MAP ( iLoad => load,
          	  	           Clear => clear,
		                   Clock => clock,
			           Output_sel => output_select,
				   i_not_10 => iIsNot10,
				   Output => output);
				  
	CS : PROCESS(clear, clock)
	BEGIN
	IF(Reset = '1')THEN
	ControlState <= S0;
	ELSIF(clock = '1' AND clock'EVENT)THEN
		CASE ControlState IS
			WHEN S0 =>
			ControlState <= S1;
			WHEN S1 =>
			ControlState <= S2;
			WHEN S2 =>
			if( iIsNot10 = '0' )THEN
			ControlState <= S2;
			ELSE
			ControlState <= S1;
			END IF;
		END CASE;
	END IF;
	END PROCESS;
 load <= '1' WHEN ControlState = S1 ELSE '0';
			 clear <= '1' WHEN ControlState = S0 ELSE '0';
			 output_select <= '1' WHEN( ControlState = S2 )ELSE '0';		 
										 
END ControlUnit;
										
