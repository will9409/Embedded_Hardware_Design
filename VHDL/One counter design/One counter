LIBRARY ieee ;
USE ieee.std_logic_1164.all ;

ENTITY Lab_04 IS
	GENERIC ( N : INTEGER := 8 ) ;
	PORT (	Clock,low ,EA, LA 	: IN 	STD_LOGIC ;
				Reset	: IN STD_LOGIC := '0';
				Done : BUFFER STD_LOGIC := '0';
				Data : IN STD_LOGIC_VECTOR(N-1 DOWNTO 0);
				A : BUFFER STD_LOGIC_VECTOR(N-1 DOWNTO 0);
				B : out STD_LOGIC_VECTOR(3 DOWNTO 0);
				y1, y2, y3 : Out STD_LOGIC);
END Lab_04 ;

ARCHITECTURE behavior OF Lab_04 IS	
	component ShiftA IS
	GENERIC ( N : INTEGER := 8 ) ;
	PORT (	D : IN STD_LOGIC_VECTOR(N-1 DOWNTO 0) ;
				Load	: IN 	STD_LOGIC ;
				Enable	: IN 	STD_LOGIC ;
				Sin 	: IN 	STD_LOGIC ;
				Clock 	: IN 	STD_LOGIC ;
				Q 	: BUFFER STD_LOGIC_VECTOR(N-1 DOWNTO 0) ) ;
	END component ;
  TYPE state IS (S1, S2, S3);
SIGNAL BCstate: state;
SIGNAL C, D : INTEGER := 0;
				
				
BEGIN

SH1:ShiftA GENERIC MAP ( N => 8 )
			  PORT MAP ( D => Data, 
							 Load => LA, 
							 Enable => EA, 
							 Sin => low, 
							 Clock =>Clock, 
							 Q => A ) ; -- A == Q
					  
OneCount: PROCESS(Reset,Clock)
	BEGIN	
		IF(Reset = '1')THEN
			BCstate <= S1;
      ELSIF rising_edge(Clock)THEN
			CASE BCstate IS
				WHEN S1 =>
				IF(low = '1')THEN
				BCstate <= S2;
				END IF;
				WHEN S2 =>
				C <= C + 1;
				if(A(0) = '1')THEN
				D <= D + 1;
				END IF;
				if(C = 7)THEN
				Done <= '1';
				BCstate <= S3;
				END IF;
				WHEN S3 =>
				if(low = '0')THEN
				BCstate <= S1;
				Done <= '0';
				END IF;
			END CASE;
		END IF;
	END PROCESS;
  	y1 <= '1' WHEN BCstate = S1 ELSE '0';
	y2 <= '1' WHEN BCstate = S2 ELSE '0';
	y3 <= '1' WHEN BCstate = S3 ELSE '0';
	B <= "0001" WHEN D = 1 ELSE "0010" WHEN D = 2 ELSE
		  "0011" WHEN D = 3 ELSE "0100" WHEN D = 4 ELSE
		  "0101" WHEN D = 5 ELSE "0110" WHEN D = 6 ELSE
		  "0111" WHEN D = 7 ELSE "1000" WHEN D = 8 ELSE
		  (others => '0');
			
END;
      
